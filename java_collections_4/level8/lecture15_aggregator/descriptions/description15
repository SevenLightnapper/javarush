DESCRIPTION 15

В классе HtmlView остался один пустой метод getUpdatedFileContent. В этом задании я опишу, что он должен делать.

1. В HtmlView создай protected метод Document getDocument() throws IOException, в котором
распарси файл vacancies.html используя Jsoup. Кодировка файла "UTF-8", используй поле filePath.

2. Получи элемент, у которого есть класс template.
Сделай копию этого объекта, удали из нее атрибут "style" и класс "template".
Используй этот элемент в качестве шаблона для добавления новой строки в таблицу вакансий.

3. Удали все добавленные ранее вакансии. У них единственный класс "vacancy".
В файле backup.html это одна вакансия - Junior Java Developer.
Нужно удалить все теги tr, у которых class="vacancy".
Но тег tr, у которого class="vacancy template", не удаляй.
Используй метод remove.

4. В цикле для каждой вакансии:
4.1. склонируй шаблон тега, полученного в п.2. Метод clone.
4.2. получи элемент, у которого есть класс "city". Запиши в него название города из вакансии.
4.3. получи элемент, у которого есть класс "companyName". Запиши в него название компании из вакансии.
4.4. получи элемент, у которого есть класс "salary". Запиши в него зарплату из вакансии.
4.5. получи элемент-ссылку с тегом a. Запиши в него название вакансии(title). Установи реальную ссылку на вакансию вместо href="url".
4.6. добавь outerHtml элемента, в который ты записывал данные вакансии,
непосредственно перед шаблоном <tr class="vacancy template" style="display: none">

5. Верни html код всего документа в качестве результата работы метода.

6. В случае возникновения исключения, выведи его стек-трейс и верни строку "Some exception occurred".

7. Запусти приложение, убедись, что все вакансии пишутся в файл vacancies.html.
Требования:

    •
    В классе HtmlView добавь метод protected Document getDocument() в котором распарси файл vacancies.html используя Jsoup.
    •
    Реализуй метод getUpdatedFileContent(). Для начала, получи распарсеную страницу с помощью метода getDocument().
    •
    Получи элемент, у которого есть класс template. Сделай копию этого объекта, удали из нее атрибут "style" и класс "template".
    •
    Удали из страницы все добавленные ранее вакансии с классом "vacancy". Элемент с классом "vacancy template" должен остаться.
    •
    Перед объектом template для каждой вакансии добавь на страницу отдельный html-элемент, используя копию template. Верни html-код всей страницы в качестве результата работы метода.
    •
    Для каждой вакансии должен быть корректно заполнен элемент-ссылка с названием вакансии(title) и http-ссылкой на нее(href).
    •
    Для каждой вакансии должен быть корректно заполнен элемент с классом "city".
    •
    Для каждой вакансии должен быть корректно заполнен элемент с классом "companyName".
    •
    Для каждой вакансии должен быть корректно заполнен элемент с классом "salary".
    •
    В случае возникновения исключения, выведи его стек-трейс и верни строку "Some exception occurred".