



Это последнее задание по MVC.

1. Следуя принципу MVC аналогично реализации предыдущих методов сделай следующее:
напиши логику обновления пользователя. После обновления должен отображаться список пользователей.

Распредели методы по классам MVC, используя следующие сигнатуры публичных методов:
void fireEventUserChanged(String name, long id, int level)
void onUserChange(String name, long id, int level)
void changeUserData(String name, long id, int level)

где name и level - это новые значения для пользователя с выбранным id.

Примечание: метод, который ты собираешься добавить в Вью нужно добавить в EditUserView.

2. Добавь в main вызов fireEventUserChanged перед вызовом метода fireEventShowDeletedUsers().

3. Добавь в интерфейс Model метод, который ты поместил в Модель, реализуй его в FakeModel:
 выброси UnsupportedOperationException.
Требования:

    •
    Необходимо определить правильное расположение метода
    fireEventUserChanged(String name, long id, int level) и реализовать этот метод.
    •
    Необходимо определить правильное расположение метода
    onUserChange(String name, long id, int level) и реализовать этот метод.
    •
    Необходимо определить правильное расположение метода
    void changeUserData(String name, long id, int level) и реализовать этот метод.
    •
    В методе main необходимо вызвать метод fireEventUserChanged(String, long, int)
    перед вызовом метода fireEventShowDeletedUsers().
    •
    Интерфейс Model должен содержать объявление метода, который ты ранее реализовал в классе MainModel.
    •
    В классе FakeModel в теле метода, помещенного в интерфейс Model, необходимо бросить UnsupportedOperationException.