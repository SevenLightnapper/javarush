DESCRIPTION 6

Но и это еще не все.
Классу BaseObject нужны еще методы.
Пока это будут пустые методы draw() и move().
Классы-наследники должны будут переопределить их у себя и реализовать необходимую функциональность.

Еще добавь метод die() - объект умирает (isAlive=false)

А еще нам нужно будет определять попала бомба в корабль или ракета в НЛО.
Это будем делать так:
Создадим специальный метод: public boolean isIntersect(BaseObject o)
Он будет определять - "пересеклись" объекты или нет. Если пересеклись - возвращать true, если нет - false.

Т.к. объекты мы условно считаем кругами, то предлагаю такую формулу взаимодействия:
eсли центр круга одного объекта попал в круг другого, то будем считать, что они столкнулись.
Или еще проще:
дистанция_между_объектами < max (радиус_первого_объекта, радиус_второго_объекта).
Требования:

    •
    В классе BaseObject создай пустой метод draw().
    •
    В классе BaseObject создай пустой метод move().
    •
    В классе BaseObject создай метод die(), который присваивает полю isAlive значение false.
    •
    В классе BaseObject создай метод isIntersect(BaseObject o), который возвращает boolean.
    •
    Реализуй метод isIntersect(BaseObject o). В случае если объекты столкнулись, нужно вернуть true, иначе - false


DESCRIPTION 7

Теперь займемся классом Canvas.
Он у нас будет содержать матрицу, куда мы будем рисовать.
У матрицы есть ширина и высота.
А еще будем в ней хранить не числа (int), а символы (char).

Надо:
а) Добавить в класс две переменные width и height;
б) Добавить в класс переменную matrix (char[][]);
в) Добавь геттеры для них;
г) В конструкторе проинициализируй матрицу.
Требования:

    •
    В классе Canvas создай поле width. Добавь для него getter.
    •
    В классе Canvas создай поле height. Добавь для него getter.
    •
    В классе Canvas создай поле matrix (char[][]). Добавь для него getter.
    •
    В классе Canvas создай конструктор Canvas(int width, int height). Инициализируй поля width и height.
    •
    Инициализируй в конструкторе поле matrix (char[height][width]).