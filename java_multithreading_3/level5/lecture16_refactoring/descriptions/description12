


12.1. Объединение условных операторов.
12.1.1. Добавь внутренний метод, сообщающий, могут ли быть перевезены пассажиры
boolean canPassengersBeTransferred() в класс Car. Метод должен возвращать true, если
водитель доступен isDriverAvailable и есть топливо fuel.
12.1.2. Перепиши метод getNumberOfPassengersCanBeTransferred(), объединив условные
операторы (используй метод canPassengersBeTransferred()).
12.2. Объединение дублирующихся фрагментов в условных операторах. Перепиши метод
startMoving(), чтобы в нем не было повторяющихся вызовов функций.
12.3. Замена магического числа символьной константой. Замени магические числа в методе
getMaxSpeed() на константные переменные метода: MAX_TRUCK_SPEED,
MAX_SEDAN_SPEED и MAX_CABRIOLET_SPEED.
12.4. Замена условного оператора полиморфизмом.
12.4.1. Переопредели метод getMaxSpeed() в подклассах, избавившись от условного оператора.
12.4.2. Метод getMaxSpeed() в классе Car сделай абстрактным.
Требования:

    •
    Необходимо создать приватный метод boolean canPassengersBeTransferred() в классе Car и реализовать его.
    •
    Необходимо изменить метод getNumberOfPassengersCanBeTransferred(),
     объединив условные операторы (используй метод canPassengersBeTransferred()).
    •
    Необходимо изменить метод startMoving(),
     чтобы в нем не было повторяющихся вызовов метода fastenDriverBelt().
    •
    Необходимо переопределить метод getMaxSpeed() в классе Truck.
     В методе нужно использовать константную переменную метода MAX_TRUCK_SPEED, значение которой равно 80.
    •
    Необходимо переопределить метод getMaxSpeed() в классе Sedan.
     В методе нужно использовать константную переменную метода MAX_SEDAN_SPEED, значение которой равно 120.
    •
    Необходимо переопределить метод getMaxSpeed() в классе Cabriolet.
     В методе нужно использовать константную переменную метода MAX_CABRIOLET_SPEED, значение которой равно 90.
    •
    Метод getMaxSpeed() в классе Car необходимо сделать абстрактным.