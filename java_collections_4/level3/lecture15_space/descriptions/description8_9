DESCRIPTION 8

Что мы будем делать с Canvas?
Мы будем рисовать на нем (в его матрице).

Поэтому нам понадобятся два метода:
public void setPoint(double x, double y, char c),
public void drawMatrix(double x, double y, int[][] matrix, char c).

Первый метод - setPoint будет "ставить точку в координатах x,y цветом c".
В методе надо:
а) округлить x и y до целых чисел,
б) занести в matrix[y][x] значение с,
в) ничего не делать, если x<0 или y<0 или y>=matrix.length или x>=matrix[0].length.

Второй метод - drawMatrix копирует переданную ему картинку (матрицу) в матрицу Canvas.
И не просто копирует, а начиная с координат x, y.

В методе надо:
а) с помощью двух вложенных циклов пройтись по всем ячейкам переданной картинки,
б) если значение ячейки matrix[i][j] не равно 0, то покрасить в матрице объекта Canvas точку (x+j, y+i) в цвет c:
setPoint(x+j, y+i, c)
Требования:

    •
    В классе Canvas создай метод public void setPoint(double x, double y, char c).
    •
    Метод setPoint должен заносить в матрицу по координатам x, y символ с.
    •
    В классе Canvas создай метод public void drawMatrix(double x, double y, int[][] matrix, char c).
    •
    Метод drawMatrix, начиная с координат x, y, должен заполнять полотно символами с, согласно переданной в метод матрицей matrix.


DESCRIPTION 9

Еще Canvas понадобится два метода, напиши их.
а) метод clear();
Этот метод будет очищать матрицу, чтобы на ней снова можно было рисовать.
Например заменить все символы матрицы на пробелы.

б) метод print();
Этот метод отрисовывает матрицу на экран.
Тут уже ты должен сам разобраться: вывести набор символов не так уж и сложно.
Не забудь добавить пару пустых строк в конце, чтобы матрицы выведенные в разное время не слипались.
Требования:

    •
    В классе Canvas создай метод clear().
    •
    Метод clear() должен очищать матрицу.
    •
    В классе Canvas создай метод print().
    •
    Метод print() должен отрисовыть матрицу в консоль.