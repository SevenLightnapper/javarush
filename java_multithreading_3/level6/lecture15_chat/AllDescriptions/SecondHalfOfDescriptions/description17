






Последний, но самый главный метод класса SocketThread - это метод void run(). Добавь его.
Его реализация с учетом уже созданных методов выглядит очень просто.

Давай напишем ее:
1) Запроси адрес и порт сервера с помощью методов getServerAddress() и getServerPort().
2) Создай новый объект класса java.net.Socket, используя данные, полученные в предыдущем пункте.
3) Создай объект класса Connection, используя сокет из п.17.2.
4) Вызови метод, реализующий "рукопожатие" клиента с сервером (clientHandshake()).
5) Вызови метод, реализующий основной цикл обработки сообщений сервера.
6) При возникновении исключений IOException или ClassNotFoundException сообщи главному потоку о проблеме,
используя notifyConnectionStatusChanged() и false в качестве параметра.

Клиент готов, можешь запустить сервер, несколько клиентов и проверить как все работает.
Требования:

    •
    В методе run() должно быть установлено и сохранено в поле connection соединение с сервером
    (для получения адреса сервера и порта используй методы getServerAddress() и getServerPort()).
    •
    В методе run() должен быть вызван метод clientHandshake().
    •
    В методе run() должен быть вызван метод clientMainLoop().
    •
    При возникновении исключений IOException или ClassNotFoundException в процессе работы метода run(),
    должен быть вызван метод notifyConnectionStatusChanged() с параметром false.
    •
    Заголовок метода run() должен соответствовать условию задачи.



Работает на локальном серваке по 127.0.0.1 ! Бугага !
Надо будет попробовать по сетке. П.С. кто не понял как это работает 1.
При запуске сервера указываем порт от 0 до 65535, лучше начинать от 1000,
тогда вероятность попасть на занятый очень мала.
После этого сервер начал работать и слушать указанный порт на всех сетевых подключениях
(физических и виртуальных, и так называемом loopback - замкнутом на себя, который имеет адрес 127.0.0.1).
2. При запуске клиента - указываем адрес сервера:
Т.к. мы запустили клиент на этом же компьютере, то его адрес для клиента будет localhost или 127.0.0.1.
Сервер может находится на любой другой машине в локальной сети или интернете, тогда его адрес будет уже другим,
из диапазона 0.0.0.0-255.255.255.255 - указываем порт тот самый порт, который слушает сервер из пункта 1.
3. Работаем в клиенте