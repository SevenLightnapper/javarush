




1. Распредели методы по классам MVC:

public void onOpenUserEditForm(long userId) {
...loadUserById(userId);
...refresh(...getModelData());
}

public void fireEventOpenUserEditForm(long id) {
...onOpenUserEditForm(id);
}

public void loadUserById(long userId) {
User user = userService.getUsersById(userId);
...setActiveUser(user);
}


!!!! Пользователь видит Вью со списком пользователей, нажимает на одного из них, запрос идет на сервер,
 выгребаем новые данные и отображаем другую Вью, которая относится к одному выбранному пользователю.
Учти это при реализации этого задания.

2. Добавь в метод main
открытие формы редактирования для пользователя с id=126 перед вызовом метода fireEventShowDeletedUsers().

3. Добавь в интерфейс Model метод, который ты поместил в Модель,
 реализуй его в FakeModel: выброси UnsupportedOperationException.
Требования:

    •
    Необходимо определить правильное расположение метода onOpenUserEditForm(long) и реализовать этот метод.
    •
    Необходимо определить правильное расположение метода fireEventOpenUserEditForm(long) и реализовать этот метод.
    •
    Необходимо определить правильное расположение метода loadUserById(long) и реализовать этот метод.
    •
    В методе main класса Solution необходимо вызвать метод открытия формы редактирования
     для пользователя с id=126 у объекта класса UsersView перед вызовом метода fireEventShowDeletedUsers().
    •
    Интерфейс Model должен содержать объявление метода, который ты ранее реализовал в классе MainModel.
    •
    В классе FakeModel в теле метода, помещенного в интерфейс Model, необходимо бросить UnsupportedOperationException.